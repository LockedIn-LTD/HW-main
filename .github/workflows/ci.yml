name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["main"]

jobs:
  branch-check:
    # 1. Add an 'if' condition to only run this job if the ref (branch) is NOT 'main' or 'master'.
    # This ensures the job is skipped after a merge to main.
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Check branch naming convention
        run: |
          # Detect branch name differently for push vs PR
          if [ "${GITHUB_EVENT_NAME}" = "pull_request" ]; then
            BRANCH_NAME="${GITHUB_HEAD_REF}"
          else
            BRANCH_NAME="${GITHUB_REF##*/}"
          fi
          
          echo "Branch name: $BRANCH_NAME"
          
          # Since the job is skipped for main/master, we only need to check the naming convention here.
          
          # Enforce <name>-<something> convention
          if [[ ! "$BRANCH_NAME" =~ ^[a-zA-Z0-9._-]+-[a-zA-Z0-9._-]+$ ]]; then
            echo "❌ Branch name does not follow '<name>-<feature>' convention (e.g. abdullah-ci)."
            exit 1
          fi
          
          echo "✅ Branch name is valid."

  syntax-check:
    runs-on: ubuntu-latest
    # 2. Modify the 'needs' dependency.
    #    Use a conditional expression to only require 'branch-check' if it ran and succeeded.
    #    Since this job runs on 'main', it will proceed even if 'branch-check' was skipped.
    needs: branch-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # Install C++ dependencies (OpenCV)
      - name: Install C++ dependencies (OpenCV)
        run: |
          sudo apt-get update
          sudo apt-get install -y libopencv-dev
          
      # Python syntax check
      - name: Check Python syntax
        run: |
          python3 -m py_compile $(find . -name "*.py")
          
      # C++ syntax check
      - name: Check C++ syntax
        run: |
          # Find all C/C++ files, filter out the non-existent simple_camera.cpp path, 
          # and include the necessary OpenCV compiler flags.
          for file in $(find . -type f -name "*.cpp" -o -name "*.hpp" -o -name "*.h" | grep -v './cameraTest/'); do
            echo "Checking $file"
            g++ -fsyntax-only -I/usr/include/opencv4/ -I/usr/include/ "$file"
          done
