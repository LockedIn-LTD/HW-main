name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["main"]

jobs:
  branch-check:
    # 1. SKIP this job on 'main' and 'master' to prevent failure after a merge.
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Check branch naming convention
        run: |
          # Detect branch name differently for push vs PR
          if [ "${GITHUB_EVENT_NAME}" = "pull_request" ]; then
            BRANCH_NAME="${GITHUB_HEAD_REF}"
          else
            BRANCH_NAME="${GITHUB_REF##*/}"
          fi
          
          echo "Branch name: $BRANCH_NAME"
          
          # Enforce <name>-<something> convention
          if [[ ! "$BRANCH_NAME" =~ ^[a-zA-Z0-9._-]+-[a-zA-Z0-9._-]+$ ]]; then
            echo "❌ Branch name does not follow '<name>-<feature>' convention (e.g. abdullah-ci)."
            exit 1
          fi
          
          echo "✅ Branch name is valid."

  build-and-test:
    runs-on: ubuntu-latest
    needs: branch-check
    # 2. RUN this job even if 'branch-check' was SKIPPED or FAILED. 
    # This ensures tests run on 'main' after a merge.
    if: ${{ always() }} 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # 3. Install necessary C++ system dependencies
      - name: Install C++ Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libopencv-dev libi2c-dev cmake
          
      - name: Create Build Directory
        run: mkdir build
        
      - name: Configure CMake
        run: |
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
        
      - name: Build Project
        # Compiles all source code and test executables
        run: |
          cd build
          cmake --build . --config Release

      - name: Run C++ Tests (ctest)
        # Executes the tests defined in your CMakeLists.txt
        run: |
          cd build
          ctest --output-on-failure
          
      # 4. Preserve Python Syntax Check
      - name: Check Python syntax
        run: |
          python3 -m py_compile $(find . -name "*.py")
